  services:
   web_service:
     build:
       context: ./
       dockerfile: ./dockerfiles/Dockerfile
     image: kinderneutron_api_image
     devices:
      - /dev/video0:/dev/video0
     # - /dev/ttyACM0:/dev/ttyACM0
     environment:
      - DISPLAY=:0
     container_name: kinderneutronapicontainer
     stdin_open: true #  docker attach container_id
     tty: true
     ports:
      - "8001:8001"
     volumes:
      - .:/root/kinderneutron
      - ./requirements.txt:/kinderneutron/requirements.txt
     networks:
      - kinderneutron_network

   web_service-1:
     build:
       context: ./
       dockerfile: ./dockerfiles/Dockerfile
     image: kinderneutronimage
     devices:
      - /dev/video0:/dev/video0
      #- /dev/ttyACM0:/dev/ttyACM0
     container_name: kinderneutron_container
     stdin_open: true #  docker attach container_id
     tty: true
     ports:
      - "8000:8000"
     volumes:
      - .:/root/kinderneutron
      - ./requirements.txt:/kinderneutron/requirements.txt
     networks:
      - kinderneutron_network

   rabbitmq:
    image: rabbitmq:management
    container_name: RabbitMQ-Server
    ports:
      - "5672:5672" # AMQP port
      - "15672:15672" # RabbitMQ Management UI
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin

   psql-db:
    image: 'postgres:14'
    container_name: psql-db
    environment:
      - PGPASSWORD=123456
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
    ports:
      - '5446:5432'
    volumes:
      - db:/var/lib/postgresql/data
      - ./Patches/SQL/create-db.sql:/docker-entrypoint-initdb.d/create-db.sql
    networks:
      - kinderneutron_network
  volumes:
    db:
      driver: local 
  

  networks:
    kinderneutron_network:
      driver: bridge
